<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC5226 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="info" docName="draft-ietf-ntp-packet-timestamps-00" ipr="trust200902">

 <front>

   <title abbrev="Packet Timestamps">Guidelines for Defining Packet Timestamps
   </title>

   <author fullname="Tal Mizrahi" initials="T."
       surname="Mizrahi">
     <organization>Marvell</organization>

     <address>
       <postal>
         <street>6 Hamada st.</street>

         <city>Yokneam</city>

         <country>Israel</country>
       </postal>

       <email>talmi@marvell.com</email>
     </address>
   </author>

    <author fullname="Joachim Fabini" initials="J." surname="Fabini">
      <organization>Vienna University of Technology</organization>

      <address>
        <postal>
          <street>Gusshausstrasse 25/E389</street>

          <city>Vienna  1040</city>
          <country>Austria</country>
        </postal>

        <phone>+43 1 58801 38813</phone>

        <facsimile>+43 1 58801 38898</facsimile>

        <email>Joachim.Fabini@tuwien.ac.at</email>

        <uri>http://www.tc.tuwien.ac.at/about-us/staff/joachim-fabini/</uri>
      </address>
    </author>
   
    <author fullname="Al Morton" initials="A." surname="Morton">
      <organization>AT&amp;T Labs</organization>

      <address>
        <postal>
          <street>200 Laurel Avenue South</street>

          <city>Middletown,</city>

          <region>NJ</region>

          <code>07748</code>

          <country>USA</country>
        </postal>

        <phone>+1 732 420 1571</phone>

        <facsimile>+1 732 368 1192</facsimile>

        <email>acmorton@att.com</email>

        <uri>http://home.comcast.net/~acmacm/</uri>
      </address>
    </author>
   
   
   <date year="2017" />

   <area>General</area>

   <workgroup>Network Working Group</workgroup>

   <keyword>Timestamps</keyword>

   <abstract>
     <t>This document specifies guidelines for defining binary packet timestamp formats in networking protocols at various layers. It also presents three recommended timestamp formats. The target audience of this memo includes network protocol designers. It is expected that a new network protocol that requires a packet timestamp will, in most cases, use one of the recommended timestamp formats. If none of the recommended formats fits the protocol requirements, the new protocol specification should specify the format of the packet timestamp according to the guidelines in this document.</t>
   </abstract>
 </front>

 <middle>
   <section title="Introduction">
     <t>Timestamps are widely used in network protocols for various purposes, including delay measurement, clock synchronization, and logging or reporting the time of an event.</t>
	 
	 <t>Timestamps are represented in the RFC series in one of two forms: text-based timestamps, and packet timestamps. Text-based timestamps <xref target="RFC3339"></xref> are represented as user-friendly strings, and are widely used in the RFC series, for example in information objects and data models, e.g., <xref target="RFC5646"></xref>, <xref target="RFC6991"></xref>, and <xref target="RFC7493"></xref>. Packet timestamps, on the other hand, are represented by a compact binary field that has a fixed size, and are not intended to have a human-friendly format. Packet timestamps are also very common in the RFC series, and are used for example for measuring delay and for synchronizing clocks, e.g., <xref target="RFC5905"></xref>, <xref target="RFC4656"></xref>, and <xref target="RFC1323"></xref>.</t>
	 
	 <t>This memo presents guidelines for defining a packet timestamp format in network protocols. Three recommended timestamp formats are presented. It is expected that a new network protocol that requires a packet timestamp will, in most cases, use one of the recommended timestamp formats. If none of the recommended formats fits the protocol requirements, the new protocol specification should specify the format of the packet timestamp according to the guidelines in this document.</t>
   </section>


   <section title="Terminology">
     <section title="Requirements Language">
       <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
       "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
       document are to be interpreted as described in <xref
       target="RFC2119">RFC 2119</xref>.</t>
     </section>

     <section title="Abbreviations">
       <t>NTP &nbsp; &nbsp; &nbsp; &nbsp; Network Time Protocol <xref target="RFC5905"></xref></t>
       <t>PTP &nbsp; &nbsp; &nbsp; &nbsp; Precision Time Protocol <xref target="IEEE1588"></xref></t>
     </section>

   </section>
   
   <section anchor="format" title="Packet Timestamp Format Specification">

    <t>This memo recommends to use the timestamp formats defined in <xref target="Recommended"></xref>. In cases where these timestamp formats do not satisfy the protocol requirements, the timestamp specification should clearly state the reasons for defining a new format. Moreover, it is recommended to derive the new timestamp format from an existing timestamp format, either a timestamp format from this memo, or any other previously defined timestamp format.</t>
	
	<t>This section defines a template for specifying packet timestamp formats. A timestamp format specification MUST include the following aspects:</t>
	
     <t>Timestamp field format: <list
         hangIndent="10" style="empty">
         <t>The format of the timestamp field consists of:</t>
		 <t>+ Size: The number of bits (or octets) used to represent the packet timestamp field.</t>
		 <t>+ Units: The units used to represent the timestamp.</t>
		 <t>If the timestamp is comprised of more than one field, the format of each field is specified.</t>
       </list></t>

     <t>Epoch: <list
         hangIndent="10" style="empty">
         <t>The origin of the timescale used for the timestamp; the moment in time used as a reference for the timestamp value.</t>
       </list></t>

     <t>Resolution: <list
         hangIndent="10" style="empty">
         <t>The timestamp resolution; the resolution is equal to the timestamp field unit. If the timestamp consists of two or more fields using different time units, then the resolution is the smallest time unit.</t>
       </list></t>
	   
     <t>Wraparound: <list
         hangIndent="10" style="empty">
         <t>The wraparound period of the timestamp; any further wraparound-related considerations should be described here.</t>
       </list></t>
	   

   </section>


   <section anchor="Recommended" title="Recommended Timestamp Formats">
	 <t>This memo recommends to use one of the timestamp formats specified below.</t>
	 
	 <t>Clearly, different network protocols may have different requirements and constraints, and consequently may use different timestamp formats. The choice of the specific timestamp format for a given protocol may depend on a various factors. A few examples of factors that may affect the choice of the timestamp format:</t>

     <t><list style="symbols">
         <t>Timestamp size: while some network protocols may allow a large timestamp fields, in other cases there may be constraints with respect to the timestamp size, affecting the choice of the timestamp format.</t>

         <t>Resolution: the time resolution is another factor that may directly affect the selected timestamp format. Similarly, the wraparound periodicity of the timestamp may also affect the selected format.</t>
		 
		 <t>Wraparound period: the length of the time interval in which the timestamp is unique may also be an important factor in choosing the timestamp format. Along with the timestamp resolution, these two factors determine the required number of bits in the timestamp.</t>

         <t>Common format for multiple protocols: if there are two or more network protocols that use timestamps and are often used together in typical systems, using a common timestamp format should be preferred if possible. Specifically, if the network protocol that is being defined typically runs on a PC, then an NTP-based timestamp format may allow easier integration with an NTP-synchronized timer. In contrast, a protocol that is typically deployed on a hardware-based platform, may make better use of a PTP-based timestamp, allowing more efficient integration with a PTP-synchronized timer.</t>
	 </list></t>

	 <section title="Using a Recommended Timestamp Format">

	   <t>A specification that uses one of the recommended timestamp formats should specify explicitly that this is a recommended timestamp format, and point to the relevant section in the current memo.</t>
	 
	   <t>A specification that uses one of the recommended timestamp formats should also include a section on Synchronization Aspects. Any assumptions or requirements related to synchronization should be specified in this section. For example, the synchronization aspects may specify whether nodes populating the timestamps should be synchronized among themselves, and whether the timestamp is measured with respect to a central reference clock such as an NTP server. If time is assumed to be synchronized to a time standard such as UTC or TAI, it should be specified in this section. Further considerations may be discussed in this section, such as required accuracy, or leap second handling.</t>

	 </section>
	 
	 <section title="NTP Timestamp Formats">

     <section title="NTP 64-bit Timestamp Format">
	 
	 <t>The Network Time Protocol (NTP) 64-bit timestamp format is defined in <xref target="RFC5905"></xref>. This timestamp format is used in several network protocols, including <xref target="RFC6374"></xref>, <xref target="RFC4656"></xref>, and <xref target="RFC5357"></xref>. Since this timestamp format is used in NTP, this timestamp format should be preferred in network protocols that are typically deployed in concert with NTP.</t>
	 
	 <t>The format is presented in this section according to the template defined in <xref target="format"></xref>.</t>

     <figure align="center" anchor="NTPFormat" title="NTP [RFC5905] 64-bit Timestamp Format">

       <artwork align="left">
         <![CDATA[
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                            Seconds                            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                            Fraction                           |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
           ]]></artwork>

     </figure>


     <t>Timestamp field format: <list
         hangIndent="10" style="empty">
         <t>Seconds: specifies the integer portion of the number of seconds since the epoch.</t>
		 <t>+ Size: 32 bits.</t>
		 <t>+ Units: seconds.</t>
         <t>Fraction: specifies the fractional portion of the number of seconds since the epoch.</t>
		 <t>+ Size: 32 bits.</t>
		 <t>+ Units: the unit is 2^(-32) seconds, which is roughly equal to 233 picoseconds.</t>
       </list></t>

     <t>Epoch: <list
         hangIndent="10" style="empty">
         <t>The epoch is 1 January 1900 at 00:00 UTC.</t>
       </list></t>

     <t>Resolution: <list
         hangIndent="10" style="empty">
         <t>The resolution is 2^(-32) seconds.</t>
       </list></t>
	   
     <t>Wraparound: <list
         hangIndent="10" style="empty">
         <t>This time format wraps around every 2^32 seconds, which is roughly 136 years. The next wraparound will occur in the year 2036.</t>
       </list></t>
	   
     </section>

     <section title="NTP 32-bit Timestamp Format">
	 
	 <t>The Network Time Protocol (NTP) 32-bit timestamp format is defined in <xref target="RFC5905"></xref>. This timestamp format is used in <xref target="I-D.morton-ippm-mbm-registry"/>. This timestamp format should be preferred in network protocols that are typically deployed in concert with NTP. The 32-bit format can be used either when space constraints do not allow the use of the 64-bit format, or when the 32-bit format satisfies the resolution and wraparound requirements.</t>
	 
	 <t>The format is presented in this section according to the template defined in <xref target="format"></xref>.</t>

     <figure align="center" anchor="NTPShortFormat" title="NTP [RFC5905] 32-bit Timestamp Format">

       <artwork align="left">
         <![CDATA[
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |          Seconds              |           Fraction            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
           ]]></artwork>

     </figure>


     <t>Timestamp field format: <list
         hangIndent="10" style="empty">
         <t>Seconds: specifies the integer portion of the number of seconds since the epoch.</t>
		 <t>+ Size: 16 bits.</t>
		 <t>+ Units: seconds.</t>
         <t>Fraction: specifies the fractional portion of the number of seconds since the epoch.</t>
		 <t>+ Size: 16 bits.</t>
		 <t>+ Units: the unit is 2^(-16) seconds, which is roughly equal to 15.3 microseconds.</t>
       </list></t>

     <t>Epoch: <list
         hangIndent="10" style="empty">
         <t>The epoch is 1 January 1900 at 00:00 UTC.</t>
       </list></t>

     <t>Resolution: <list
         hangIndent="10" style="empty">
         <t>The resolution is 2^(-16) seconds.</t>
       </list></t>

     <t>Wraparound: <list
         hangIndent="10" style="empty">
         <t>This time format wraps around every 2^16 seconds, which is roughly 18 hours.</t>
       </list></t>
	   
     </section>
	 

	 
	 </section>
	 
	 <section title="The PTP Truncated Timestamp Format">

	 <t>The Precision Time Protocol (PTP) <xref target="IEEE1588"></xref> uses an 80-bit timestamp format. The truncated timestamp format is a 64-bit field, which is the 64 least significant bits of the 80-bit PTP timestamp. Since this timestamp format is similar to the one used in PTP, this timestamp format should be preferred in network protocols that are typically deployed in PTP-capable devices.</t>
	 
	 <t>The PTP truncated timestamp format is used in several protocols, such as <xref target="RFC6374"></xref>, <xref target="RFC7456"></xref>, <xref target="RFC8186"></xref> and <xref target="ITU-T-Y.1731"></xref>.</t>

     <figure align="center" anchor="PTPFormat" title="PTP [IEEE1588] Truncated Timestamp Format">

       <artwork align="left">
         <![CDATA[
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                            Seconds                            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                          Nanoseconds                          |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
           ]]></artwork>

     </figure>


     <t>Timestamp field format: <list
         hangIndent="10" style="empty">
         <t>Seconds: specifies the integer portion of the number of seconds since the epoch.</t>
		 <t>+ Size: 32 bits.</t>
		 <t>+ Units: seconds.</t>
         <t>Nanoseconds: specifies the fractional portion of the number of seconds since the epoch.</t>
		 <t>+ Size: 32 bits.</t>
		 <t>+ Units: nanoseconds. The value of this field is in the range 0 to (10^9)-1.</t>
       </list></t>

     <t>Epoch: <list
         hangIndent="10" style="empty">
         <t>The PTP <xref target="IEEE1588"></xref> epoch is 1 January 1970 00:00:00 TAI, which is 31 December 1969 23:59:51.999918 UTC.</t>
       </list></t>

     <t>Resolution: <list
         hangIndent="10" style="empty">
         <t>The resolution is 1 nanosecond.</t>
       </list></t>

     <t>Wraparound: <list
         hangIndent="10" style="empty">
         <t>This time format wraps around every 2^32 seconds, which is roughly 136 years. The next wraparound will occur in the year 2106.</t>
       </list></t>
	 
	 </section>
	 
   </section>

   
   <section title="Timestamp Use Cases">
     <t>Packet timestamps are used in various network protocols. Typical applications of packet timestamps include delay measurement, clock synchronization, and others. The following table presents a (non-exhaustive) list of protocols that use packet timestamps, and the timestamp formats used in each of these protocols.</t>

        <figure align="center" anchor="TimestampExamples" title="Protocols that use Packet Timestamps">
 
          <artwork align="left">
         <![CDATA[
+------------------+-----------------------------------+-----------+
|                  |       Recommended formats         |  Other    |
+------------------+-----------+-----------+-----------+  format   |
| Protocol         |NTP 64-bit |NTP 32-bit |PTP Trunc. |           |
+------------------+-----------+-----------+-----------+-----------+
| NTP   [RFC5905]  |     +     |           |           |           |
+------------------+-----------+-----------+-----------+-----------+
| OWAMP [RFC4656]  |     +     |           |           |           |
+------------------+-----------+-----------+-----------+-----------+
| TWAMP [RFC5357]  |     +     |           |           |           |
| TWAMP [RFC8186]  |           |           |     +     |           |
+------------------+-----------+-----------+-----------+-----------+
| TRILL [RFC7456]  |           |           |     +     |           |
+------------------+-----------+-----------+-----------+-----------+
| MPLS  [RFC6374]  |           |           |     +     |           |
+------------------+-----------+-----------+-----------+-----------+
| TCP   [RFC1323]  |           |           |           |     +     |
+------------------+-----------+-----------+-----------+-----------+
| RTP   [RFC3550]  |     +     |           |           |     +     |
+------------------+-----------+-----------+-----------+-----------+
           ]]></artwork>
        </figure>

	 <t>The rest of this section presents two hypothetic examples of network protocol specifications that use one of the recommended timestamp formats. The examples include the text that specifies the information related to the timestamp format.</t>
	 
	 <section title="Example 1">
       <t>Timestamp: <list
         hangIndent="10" style="empty">
         <t>The timestamp format used in this specification is the NTP <xref target="RFC5905"></xref> 64-bit format, as specified in Section 4.2.1 of <xref target="I-D.mizrahi-intarea-packet-timestamps"/>.</t>
       </list></t>

       <t>Synchronization aspects: <list
         hangIndent="10" style="empty">
         <t>It is assumed that nodes that run this protocol are synchronized to UTC using a synchronization mechanism that is outside the scope of this document. In typical deployments this protocol will be run on a machine that uses NTP <xref target="RFC5905"></xref> for synchronization. Thus, the timestamp may be derived from the NTP-synchronized clock, allowing the timestamp to be measured with respect to the clock of an NTP server.</t>
       </list></t>
	   
	 </section>

	 <section title="Example 2">
       <t>Timestamp: <list
         hangIndent="10" style="empty">
         <t>The timestamp format used in this specification is the PTP <xref target="IEEE1588"></xref> Truncated format, as specified in Section 4.2.3 of <xref target="I-D.mizrahi-intarea-packet-timestamps"/>.</t>
       </list></t>

	   <t>Synchronization aspects: <list
         hangIndent="10" style="empty">
         <t>It is assumed that nodes that run this protocol are synchronized among themselves. Nodes may be synchronized to a global reference time. Note that if PTP <xref target="IEEE1588"></xref> is used for synchronization, the timestamp may be derived from the PTP-synchronized clock, allowing the timestamp to be measured with respect to the clock of an PTP Grandmaster clock.</t>
       </list></t>

     </section>
	 
	 
   </section>

   <section title="Packet Timestamp Control Field">
     <t>In some cases it is desirable to have a control field that includes information about the timestamp format. This section defines a recommended format of a timestamp-related control field that is intended for network protocols that require such timestamp-related control information.</t>
	 
	 <t>The recommended control field includes the following sub-fields:</t>
	 
     <t><list style="symbols">
         <t>Timestamp format.</t>

         <t>Precision - the resolution or granularity of the system clock.</t>

         <t>Epoch.</t>
		 
		 <t>Era - the number of times the time has wrapped around since the epoch.</t>
       </list></t>
	 
	 
	 
   </section>
   
   <!-- Possibly a 'Contributors' section ... -->

   
   
   <section anchor="IANA" title="IANA Considerations">
     <t>This memo includes no request to IANA.</t>

   </section>

   <section anchor="Security" title="Security Considerations">

     <t>A network protocol that uses a packet timestamp MUST specify the security considerations that result from using the timestamp. This section provides an overview of some of the common security considerations of using timestamps.</t>
	 
	 <t>Any metadata that is attached to control or data packets, and specifically packet timestamps, can facilitate network reconnaissance; by passively eavesdropping to timestamped packets an attacker can gather information about the network performance, and about the level of synchronization between nodes.</t>

	 <t>Timestamps can be spoofed or modified by on-path attackers, thus attacking the application that uses the timestamps. For example, if timestamps are used in a delay measurement protocol, an attacker can modify en route timestamps in a way that manipulates the measurement results. Integrity protection mechanisms, such as Hashed Message Authentication Codes (HMAC), can mitigate such attacks. The specification of an integrity protection mechanism is outside the scope of this document, as typically integrity protection will be defined on a per-network-protocol basis, and not specifically for the timestamp field.</t>
	 
	 <t>Another potential threat that can have a similar impact is delay attacks. An attacker can maliciously delay some or all of the en route messages, with the same harmful implications as described in the previous paragraph. Mitigating delay attacks is a significant challenge; in contrast to spoofing and modification attacks, the delay attack cannot be prevented by cryptographic integrity protection mechanisms. In some cases delay attacks can be mitigated by sending the timestamped information through multiple paths, allowing to detect and to be resilient to an attacker that has access to one of the paths.</t>
	 
	 <t>In many cases timestamping relies on an underlying synchronization mechanism. Thus, any attack that compromises the synchronization mechanism can also compromise protocols that use timestamping. Attacks on time protocols are discussed in detail in <xref target="RFC7384"></xref>.</t>

   </section>
 
    <section anchor="Acknowledgments" title="Acknowledgments">
     <t>The authors thank Yaakov Stein and other members of the TICTOC and NTP working groups for many helpful comments.</t>
   </section>

 
 </middle>

 <!--  *****BACK MATTER ***** -->

 <back>

   <references title="Normative References">
     <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
     &RFC2119;

   </references>
   
   <references title="Informative References">
     <!-- Here we use entities that we defined at the beginning. -->

      <reference anchor='IEEE1588'>
       <front>
        <title>IEEE 1588 Standard for a Precision Clock Synchronization Protocol for Networked Measurement and Control Systems Version 2
        </title>
        <author>
         <organization>IEEE</organization>
        </author>
        <date year='2008' />
       </front>
      </reference>

      <reference anchor='ITU-T-Y.1731'>
       <front>
        <title>OAM functions and mechanisms for Ethernet based Networks</title>
        <author>
         <organization>ITU-T</organization>
        </author>
        <date year='2013' />
       </front>
      </reference>


     <?rfc include='reference.RFC.3339'?>
     
     <!-- ?rfc include='reference.RFC.5277'? -->

     <?rfc include='reference.RFC.7493'?>

     <?rfc include='reference.RFC.6991'?>

     <?rfc include='reference.RFC.5646'?>

     <!-- ?rfc include='reference.RFC.7940'? -->
	 
     <?rfc include='reference.RFC.5905'?>

     <?rfc include='reference.RFC.1323'?>

     <?rfc include='reference.RFC.3550'?>

     <?rfc include='reference.RFC.6374'?>

     <?rfc include='reference.RFC.5357'?>

     <?rfc include='reference.RFC.4656'?>
	 
     <?rfc include='reference.RFC.7456'?>

     <?rfc include='reference.RFC.7384'?>

     <?rfc include='reference.RFC.8186'?>

     <?rfc include='reference.I-D.morton-ippm-mbm-registry'?>

     <?rfc include='reference.I-D.mizrahi-intarea-packet-timestamps'?>
	 
   </references>


   <!-- Change Log

v00 2016-08-02  TM   Initial version

v01 2016-08-10  TM   Minor updates including: timestamp format change, added Flow ID.

   -->
 </back>
</rfc>
